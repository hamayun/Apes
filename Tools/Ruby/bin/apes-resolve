#!/usr/bin/env ruby1.9

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

require 'apes/id'
require 'apes/resolve'

def program_usage
  puts "Usage: apes-resolve <name> <id>"
end

#
# Check the arguments
#

if ARGV.count != 2 then
  program_usage
  abort
end

#
# Get the component list
#

begin
  component_list = APELibraryParser.getComponentList
rescue RuntimeError
  puts '[resolve] Variable APES_COMPONENT_PATH not defined.'
  abort
rescue Errno::ENOENT => detail
  print '[resolve] error in APES_COMPONENT_PATH: '
  puts detail.message
  abort
end

#
# Create an ID for the component
#

id = APEId.new(ARGV[0], nil, ARGV[1])

#
# Search the component
#

components = component_list.find_all { |e| e.id == id }

if components == nil || components.empty? then
  abort "[resolve] " + ARGV[0] + ": no match found."
elsif components.length != 1 then
  abort "[resolve] " + name + ": multiple matches found."
end

dependencies = component_resolve components[0], component_list, []

if dependencies.empty? then
  puts "[resolve] No dependencies for: " + ARGV[0]
else
  dependencies.each do |d|
    puts d.id.to_s
  end
end

