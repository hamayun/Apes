#!/usr/bin/env ruby

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

require 'apes/id'
require 'apes/genrake'

#
# Define program usage
#

def program_usage
  puts "Usage: apes-genrake {<name> <version>}"
end

#
# Get the component list
#

begin
  component_list = APELibraryParser.getComponentList
rescue RuntimeError
  puts '[genrake] Variable APES_COMPONENT_PATH not defined.'
  abort
rescue Errno::ENOENT => detail
  print '[genrake] error in APES_COMPONENT_PATH: '
  puts detail.message
  abort
end

#
# Duplicate the arguments
#

ARGV.uniq!
arguments = ARGV.clone

#
# Find the component to build
#

components = []

case arguments.count
when 0 

  component = APEComponent.createFromXMLFileAtPath Dir.pwd

  if component == nil then
    abort "[genrake] No component in this directory."
  end

  components = component_list.find_all { |e| e.id == component.id }

when 2

  id = APEId.new(arguments[0], nil, arguments[1])
  components = component_list.find_all { |e| e.id == id }

else
  program_usage
  abort
end

if components == nil or components.empty? then
  abort "[genrake] " + id.to_s + ": no match found."
elsif components.length != 1 then
  abort "[genrake] " + id.to_s + ": multiple matches found."
end

#
# Generate the Rakefile
#

generate_rakefile components[0], component_list

